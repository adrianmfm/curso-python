# -*- coding: utf-8 -*-
"""CURSO_PYTHON_UNEMY

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MmhIzQ8YsVQu1nQFNDYZpeY7uhUvVYyU
"""

print('50 + 100')
#No es operacion numerica porque esta en comillas

print('Hola' + 'Fede')

print('Me llamo \"Adrian\"')
#Barra invertidad para decirle a python que el siguiente caracter no lo tome como texto

print('Esta es una linea\nY esta es otrra linea')
#para separarlas lineas
print('\t Esta es la tercera linea')
#para dejar sangria
print('This isn\'t a number')

print('A "" B "" C ')
print('D "" E "" F ')
print('G "" H "" I ')

print('A\tB\tC\t')
print('D\tE\tF\t')
print('G\tH\tI\t')

print('Barra normal: / \nBarra invertida: \\ ')

print('Tu nombre es: ' + input('Ingrese su nombre: ') + "" + input('Ingrese su apellido: '))

print('Me encanta estudiar python')
print('Estudiar con "Google colab" es genial')
print(50 + 550)
print("Línea 1\nLínea 2\nLínea 3")

nombre = input('Escribe tu nombre: ')
apellido = input('Escribe tu apellido: ')
print(nombre, apellido)

a = input('Que ciudad te gustaria visitar: ')
b = input('Color favorito: ')
print(f' El nombre de la cerveceria es: {a+b}')

#TIPOS DE DATOS
#STR (TEXTO)
# INT(NUMERICO) 
#FLOAT(DECIMAL) 
#LST(LISTA) 
#DIC(DICCIONARIO) TUP, SEL, 
#BOOL(BOOLEAN)

#UNA VARIABLE ES UN ESPACIO DE MEMORIA AL QUE LE PONES UN NOMBRE EN EL CUAL PUEDES PONER EL CONTENIDO O VALOR QUE DESEES

nombre = 'Juan'
print(nombre)

nombre = input('Ingrese su nombre: ')
edad = input('Ingrese su edad: ')
datos = nombre + edad 
print(datos)

nombre = 'Julia'
apellido = 'Roberts'
nombrecompleto = nombre + apellido
print(nombrecompleto)

curso = 'Python'
print('Estas tomando un curso de', curso)

num1 = 7.5
num2 = 2.4
print(type(num1))
#para imprimir el tipo de dato

num1 = 5.8
print(type(num1))
print(num1)

#aca le digo al codigo que cambie forzozamente el tipo de dato a int por eso lo deja en 5
num2 = int(num1)
print(type(num2))
print(num2)

num1 = 7.5
num1 = int
print(num1)

x = 10
y = 8
z = x + y
print('La suma de {} y {} es : {}'.format(x,y,z))
#otra forma de hacer un print con variables

nombre_asociado = "Jesse Pinkman"
numero_asociado = 399058
print(f'Estimado/a {nombre_asociado}, su número asociado es: {numero_asociado}')

puntos_anteriores = 875
puntos_nuevos = 350
print(f'Has ganado{puntos_nuevos} puntos! En total, acumulas {puntos_nuevos + puntos_anteriores}')

x = 874
y = 27
print(f'La dision de {x} entre {y} es {x//y}')

x = 456
y = 33
print(f'El resto de la division entre {x} y {y} es {x%y}')

x = 783
print(f'La raiz cuadrada de {x} es {x**0.5 }')

valor = round(95.666666666)
#para redonderar un valor, el 2 despues de la coma significa cuanros decimales quieres dejar
print(valor)
print(type(valor))

valor = round(10/3,2)
print(valor)

valor = 5**0.5
print(round(valor, 4))

num1 = 10
num2 = 25
num1 = num2
print(num1, num2)

num1 = round(13/2,0)
print(type(num1))

usuario = input('Bienvenido, ingrese su nombre: ')
ventas = int(input('Ingrese la cantidad de ventas: '))

comision = ventas * 0.13
comision = round(comision)
print(f'Hola{usuario}, tus comisiones de este mes son de ${comision}')

texto = 'hola'
texto.index('o')
#para saber el indice del texto
#recordar que parte en 0
texto[3]
#preguntas la posicion exacta

texto = 'Esto es una prueba'
resultado = texto.index('a')
#busca de izquierda a derecha y se detiene en el ´primer resultado
#resultado = texto.index('a',11) <-- asi le puedes pedir que empiece la busqueda desde cierto punto
print(resultado)

texto = 'Esto es una prueba'
resultado = texto.rindex('a')
#de derecha a izquierda
print(resultado)

frase = "En teoría, la teoría y la práctica son los mismos. En la práctica, no lo son."
print(frase.index('práctica'))

texto = 'ABCDEFGHIJKLM'
#el segundo
fragmento = texto[2]
print(fragmento)

texto = 'ABCDEFGHIJKLM'
#desde el dos hasta el 5 pero no lo incluye
fragmento = texto[2:5]
print(fragmento)

texto = 'ABCDEFGHIJKLM'
#desde 0 hasta el 5
fragmento = texto[:5]
print(fragmento)

texto = 'ABCDEFGHIJKLM'
#desde el dos hasta el final
fragmento = texto[2:]
print(fragmento)

texto = 'ABCDEFGHIJKLM'
#selecciona todo el texto
fragmento = texto[:]
print(fragmento)

texto = 'ABCDEFGHIJKLM'
#se salta de a dos
fragmento = texto[2:10:2]
print(fragmento)

texto = 'ABCDEFGHIJKLM'
#toma todo de dos en dos 
fragmento = texto[::2]
print(fragmento)

texto = 'ABCDEFGHIJKLM'
#toda la cadena al reves
fragmento = texto[::-1]
print(fragmento)

frase = "Controlar la complejidad es la esencia de la programación"
fragmento = frase[0:9]
print(fragmento)

frase = "Nunca confíes en un ordenador que no puedas lanzar por una ventana"
fragmento = frase[9::3]
print(fragmento)

texto = 'Este es mi texto'
#para dejar en mayuscula
resultado = texto.upper()
print(resultado)

texto = 'Este es mi texto'
#para dejar en mayuscula puedes determinar un indice en particular
resultado = texto[2].upper()
print(resultado)

texto = 'Este es mi texto'
#para dejar en minuscula
resultado = texto.lower()
print(resultado)

texto = 'Este es mi texto'
#para dejar en una lista
resultado = texto.split()
print(resultado)

texto = 'Este es mi texto'
#para dejar en una lista
resultado = texto.split('t')
print(resultado)

a = 'Aprender'
b = 'python'
c = 'es'
d = 'genial'
e = ' '.join([a,b,c,d]).upper()
#para unir textos (deber ser una lista)
print(e)

texto = 'Este es mi texto'
#para buscar, la diferencia con index es que te arroja un -1 cuando. no existe el texto que buscas

resultado = texto.find('z')
print(resultado)

texto = 'Este es mi texto'
#para reemplazar
resultado = texto.replace('mi', 'nuestro')
print(resultado)

frase = 'Si la implementación es difícil de explicar, puede que sea una mala idea.'
resultado = frase.replace('difícil', 'fácil')

print(resultado)

lista_palabras = ["La","legibilidad","cuenta."]
resultado = ' '.join(lista_palabras)
print(lista_palabras)

print('''hola 
mundo''')

nombre = 'carina'
nombre = 'Karina'
print(nombre)

texto = '''repetecion'''
print(texto * 15)

poema = 'Tierra mojada,\n mis recuerdos de viaje entre las lluvias'
print(poema)

poema = 'Tierra mojada,\n mis recuerdos de viaje\n entre las lluvias'
print(len(poema))

lista = ['a', 'b', 'c']
lista2 = ['d', 'e', 'f']
lista3 = lista + lista2
print(type(lista))
print(len(lista))

lista3[3]= 'alfa'
print(lista3)
#se pueden aplicar todos los cambios que a un string
#se puede sobre escribir cualquiera de sus elementos

lista = ['a', 'b', 'c']
lista2 = ['d', 'e', 'f']
lista3 = lista + lista2
print(type(lista))
print(len(lista))
#agregar elementos a lista modificandola

lista3.append('g')
print(lista3)

lista = ['a', 'b', 'c']
lista2 = ['d', 'e', 'f']
lista3 = lista + lista2
print(type(lista))
print(len(lista))
#eliminar elementos

lista3.pop()
#elimina el ultimo elemento
#a menos que especifiques el indice
#se puede quitar y reservar si lo quieres usar despues dandole una variable
print(lista3)

#ordenar la lista alfabeticamente y de menor a mayor
lista = ['c', 'f', 'b', 'a']
lista.sort()
#este metodo no se puede asignar a una variable ya que no devuelve nada
print(lista)

lista = ['a', 'b', 'c', 'd']
lista.reverse()
print(lista)

frutas = ["manzana", "banana", "mango", "cereza", "sandía"]
eliminado = frutas.pop(2)
print(eliminado)

diccionario = {'c1': '1', 'c2': '2' }
print(diccionario)
#para imprimir especificamente. un numero
resultado = diccionario['c1']
print(resultado)

cliente = {'nombre': 'Juan', 'apellido': 'Fuentes', 'peso': 90, 'talla': 1.78}
consulta = cliente ['apellido']
print(consulta)
print(cliente)

dic = {'c1': 55, 'c2': [2,3,4], 'c3': {'nombre': 'adrian', 'apellido': 'flores'}}
#diccionario con una lista y un diccionario :0
print(dic)
resultado = dic['c3']
print(resultado)
#imprimiendo por indice
print(dic['c2'][1])
#para buscar con diccionario se busca con la clave
print(dic['c3']['nombre'])

dic ={'c1': ['a', 'b', 'c'], 'c2': ['d', 'e', 'f']}
#llamando a la letra 'e' y dejandola en mayuscula
#usando el metodo upper (DENTRO DE LA MAYUSCULA DEL PRINT PORQUE LE ESPECIFICAS SOLO LA LETRA 'E')
print(dic['c2'][1].upper())

dic = {'1': 'a', '2': 'b'}
print(dic)
#agregandole una clave al diccionario
dic['3'] = 'c'
#sobreescribir un valor
dic['2'] = 'B'
print(dic)
#imprime las llaves del diccionario
print(dic.keys())
#imprimir valores 
print(dic.values())
#imprime todo 
print(dic.items())

mi_dic = {"nombre":"Karen", "apellido":"Jurgens", "edad":36, "ocupacion":"Editora"}
mi_dic['pais'] = 'Colombia'

mi_dict = {"valores_1":{"v1":3,"v2":6},"puntos":{"points1":9,"points2":[10,300,15]}}
print(mi_dict['puntos']['points2'][1])

#tuples
#se utilizan para usarlas en cosas que no quieras modificar
#puede contener cualquier tipo de dato
mi_tuple = (1,2,(20,30),3,4)
mi_tuple = list
print(type(mi_tuple))
print(mi_tuple)

a = 1
a = 2
print()

t = (1,2,3,1)
w,x,y,z = t
print(x,y,z)
print(len(t))
#cuenta la cantidad de apariciones dentro del tuple
print(t.count(1))
print(t.index(2))

mi_tupla = (1, 2, 3, 2, 3, 1, 3, 2, 3, 3, 3, 1, 3, 2, 2, 1, 3, 2)
print(mi_tupla.count(2))

#set solo admite elementos unicos
#no estan ordenados en indices
#sus elementos son inmutables
#admite tuples
mi_set = set([1,2,3,4,5,5])
print(mi_set)

s1 = {1,2,3}
s2 = {3,4,5}
s3= s1.union(s2)
print(s3)

s1 = set({1,2,3})
#para agregar
s1.add(2)
#para descartar
s1.discard(3)
print(s1)

sorteo = {"Camila", "Margarita", "Axel", "Jorge", "Miguel", "Mónica"}
eliminar = sorteo.pop()
#elimimna al azar

sorteo = {"Camila", "Margarita", "Axel", "Jorge", "Miguel", "Mónica"}
sorteo.add("Damian")
print(sorteo)

#booleanos 
va1 = True
va2 = False
#comparar dos numeros ya los convierte en boolenaos

numero = 5 > 2+3
print(type(numero))
print(numero)

lista = [1,2,3,4]
control = 5 not in lista
print(type(control))
print(control)

prueba = 17834/34 > 87*56
print(prueba)

prueba = 25** 0.5 == 5
#raiz cuadrada
print(prueba)

texto =input('Ingrese un texto (poema, lo que sea): ').lower()
letras = []


letras.append(input('Ingrese la primera letra: ').lower())
letras.append(input('Ingrese la segunda letra: ').lower())
letras.append(input('Ingrese la tercera letra: ').lower())

print('\n')
print('CANTIDAD DE LETRAS')
cantidad_letras1 = texto.count(letras[0])
cantidad_letras2 = texto.count(letras[1])
cantidad_letras3 = texto.count(letras[2])
print(f'Hemos encontrado la letra {letras[0]} repetida {cantidad_letras1} veces')
print(f'Hemos encontrado la letra {letras[1]} repetida {cantidad_letras2} veces')
print(f'Hemos encontrado la letra {letras[2]} repetida {cantidad_letras3} veces')

palabras = texto.split()
print(f'HEMOS ENCONTRADO {len(palabras)} PALABRAS EN EL TEXTO')

print('\n')
print('LETRAS DE INICIO A FIN')
letra_inicio = texto[0]
letra_final = texto[-1]
print(f'La letra inicial es "{letra_inicio}" y la letra final es "{letra_final}"')
print('\n')
print('TEXTO INVERTIDO')
palabras.reverse()
texto_invertido = ' '.join(palabras)
print(f'Si ordenamos tu texto al revez va a decir: "{texto_invertido}"')
print('\n')
buscar_python = 'cielo' in texto
dic = {True: 'si', False: 'no'}
print(f'La palabra "python" {dic[buscar_python]} se encuentra en el texto')